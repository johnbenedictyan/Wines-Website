"""
Django settings for project4 project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
# import env
from django.contrib.messages import constants as messages
import dj_database_url
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# A custom view function for an invalid CSRF token.
CSRF_FAILURE_VIEW = 'website.views.csrf_failure'

# Changes the messages tag so that are displayed in Bootstrap
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

# This line changes the default message storage to be a session based one.
# This allows messages to be rendered through a redirect.
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

# This allows the cookies to persist sitewide.
SESSION_COOKIE_SECURE = True

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c)zch_zo7chrm@wpk0)f4q8_rvx0$34l=-bs2@pk#vp30$)$_1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    'da5617fb5ae443e79240258551287458.vfs.cloud9.ap-southeast-1.amazonaws.com',
    'jby-tgc-project-4.herokuapp.com'
]


# Application definition

INSTALLED_APPS = [
    'pyuploadcare.dj',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'products',
    'checkout',
    'users',
    'website',
    'crispy_forms',
    'storages',
]

# This changes the crispy forms to render the form in Bootstrap.
CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'project4.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project4.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.parse(
        os.environ.get("POSTGRESQL_URL")
    )
}

if 'test' in sys.argv:
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(
        BASE_DIR, 'static'
    ),
)
STATIC_ROOT = os.path.join(
    BASE_DIR,
    'staticfiles'
)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(
    BASE_DIR,
    'media'
)

UPLOADCARE = {
    'pub_key': os.environ.get("UPLOADCARE_PUBLIC_KEY"),
    'secret': os.environ.get("UPLOADCARE_SECRET_KEY"),
    'widget_version': '2.8.1',
    'widget_build': 'min',  # without jQuery
}

AUTH_USER_MODEL = 'users.UserAccount'

LOGIN_URL = '/users/log-in/'
LOGOUT_URL = '/users/log-out/'
HOME_URL = '/'

# AWS S3 Parameters
AWS_S3_OBJECT_PARAMETERS = {
    'Expires': 'Thu, 31 Dec 2099 20:00:00 GMT',
    'CacheControl': 'max-age=9460800'
}

AWS_STORAGE_BUCKET_NAME = 'tgc-ci-project4'
AWS_S3_REGION_NAME = 'ap-southeast-1'
AWS_ACCESS_KEY_ID = os.environ.get("AWS_SECRET_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.environ.get("AWS_SECRET_ACCESS_KEY")
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
STATICFILES_STORAGE = 'custom_storage.StaticStorage'
STATICFILES_LOCATION = 'static'

MEDIAFILES_STORAGE = 'custom_storage.MediaStorage'
MEDIAFILES_LOCATION = 'media'
